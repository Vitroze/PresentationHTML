<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="sText.Text" xml:space="preserve">
    <value>Dans un premier temps nous allons crée la balise &lt;!DOCTYPE html&gt;
qui permettra de détecter l'HTML.
Ainsi nous allons crée la deuxième balise qui est &lt;html&gt; (&lt;/html), 
elle permettra de prendre en compte toute la page html.
Nous allons crée deux autres balises &lt;head&gt; qui permettra
de prendre tout ce qui est en haut de la page ("en tête")
et &lt;body&gt; qui permettrea de prendre le contenu de la page.
Dans le &lt;head&gt; nous allons définir sur quel façon dont le texte est
transmis et stocké. Nous allons utilisés la balise 
&lt;meta charset="utf-8" /&gt;
&lt;title&gt; qui sera dans le &lt;head&gt; permettra définir un titre a l'onglet.

Ainsi dans le body, nous avons :
&lt;img&gt; elle permettra de définir une image. Dans cette ligne nous 
avons"deux arguments", qui sont la class (elle permettra de modifier
l'image dans le css) et src qui permettra de localiser l'image.
Nous avons : &lt;h2&gt; et &lt;h5&gt; qui permettra de définir du texte sur notre
page. Dont &lt;h2&gt; est le plus grand en terme de taille d'écriture et 
&lt;h5&gt; le plus petit</value>
  </data>
</root>